services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: managements_backend
    env_file:
      - ./.env.prod
    expose:
      - "8000"
    volumes:
      - .:/app
      - managements_static_volumes:/app/static
      - managements_media_volumes:/app/media
    command: >
      sh -c "
      python manage.py migrate &&
      gunicorn -b 0.0.0.0:8000 --workers 3 --timeout 120 config.wsgi:application"
    depends_on:
      - db
        # condition: service_healthy

  db:
    image: postgres:15
    container_name: managements_db
    env_file:
      - ./.env.prod
    volumes:
      - managements_db_data:/var/lib/postgresql/data
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: managements_nginx
    restart: unless-stopped
    volumes:
      - managements_static_volumes:/app/static
      - managements_media_volumes:/app/media
    ports:
      - "1156:80"
    depends_on:
      backend:
        condition: service_started

volumes:
  managements_db_data:
  managements_media_volumes:
  managements_static_volumes:
